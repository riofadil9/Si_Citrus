<% function formatDate(dateString) { %>
    <% const date = new Date(dateString); %>
    <% const options = { year: 'numeric', month: '2-digit', day: '2-digit' }; %>
    <%= date.toLocaleDateString('en-US', options) %>
<% } %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Classification</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Tailwind custom scrollbar styling */
        .scrollbar-custom::-webkit-scrollbar {
          width: 8px; /* Width of the scrollbar */
        }
        .scrollbar-custom::-webkit-scrollbar-track {
          background: transparent; /* Track color */
        }
        .scrollbar-custom::-webkit-scrollbar-thumb {
          background-color: #949494; /* Thumb color */
          border-radius: 4px; /* Rounded corners */
        }
        @import url('https://fonts.googleapis.com/css2?family=Poppins:display=swap');
        *{
            font-family: "Poppins", sans-serif;
            padding: 0;
            margin: 0;
            text-align: center;
            justify-content: center;
            align-items: center;
            box-sizing: border-box;
        }
        header{
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            /* height: 120px; */
            /* padding: 20px 100px; */
            background: #28667E;
            display: flex;
            justify-content: space-between;
        }
        /* img{
            width: 300px;
            height: 144px;
        } */
        body{
            background-color: white;
        }
        /* form img{
            width: 240px;
            height: 240px;
        } */
        .containe button{
            /* font-size: x-large; */
            /* padding: 10px 25px; */
            border-radius: 20px;
            border: none;
            background-color: #2D9596;
            color: white;
            margin: 20px 0;
        }
        form label{
            font-size: 16px;
            font-weight: 400;
        }
        form a{
            display: flex;
            font-size: 48px;
            background-color: #2D9596;
            border-radius: 100%;
            width: 65px;
            height: 65px;
            color: white;
            border-radius: 100%;
            margin-left: 90%;
            text-decoration: none;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        /* .navigation img{
            display: flex;
            width: 80px;
            height: 80px;
            border-radius: 100%;
        } */
        .containe{
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            flex: 1;
        }
        form{
            display: flex;
            flex-direction: column;
        }
        form span{
            font-weight: 300;
        }
        #uploadForm {
            border: 2px dashed #ccc;
            border-radius: 10px;
            border-width: 5px;
            padding: 20px;
            text-align: center;
            /* margin: 20px auto; */
            width: 70%;
            height: 60%;
        }
        .highlight {
            background-color: #23dc5d;
        }
        #output {
            display: none;
            flex: 1;
            /* margin-top: 20px; */
            padding: 10px;
            font-size: x-large;
            text-align: left ;
            align-items: start;
            flex-direction: column;
        }
        .sidebar{
            justify-content: left;
            flex-direction: column  ;
            margin-left: 0px;
            width: 259px;
            /* height: 100%; */
            background-color: #28667E;
            border-radius: 30px;
            /* padding: 24px 16px; */
            text-align: center;
            /* font-size: 20px; */
            /* text-decoration: none; */
            font-weight: 200;
            box-sizing: border-box;
        }
        .sidebar .sidebar1{
            /* margin-top: 65vh; */
            /* width: 227px;
            height: 58px; */
            border: none;
            border-radius: 10px;
            /* font-size: 20px;
            font-weight: 300; */
            color: white;
            background-color: #2D9596;
            /* margin-top: 20px; */
        }
        .sidebar a #lakukanDiagnosa{
            display: flex;
            align-items: center;
            /* width: 227px; */
            height: 58px;
            border-radius: 10px;
            background-color: #2D9596;
            color: white;
            font-size: 20px;
            font-weight: 300;
            text-decoration: none;
        }
        /* .flex{
            display: flex;
            flex-direction: row;
            justify-content: left;
            align-items: center;
            gap: 20px;
            min-height: 80vh;
        } */
        #dropArea{
            background-position: center;
            background-size: cover;
        }
    </style>
    <script>
        $(document).ready(function() {
            $('#refresh-btn').on('click', function() {
                $.ajax({
                    url: '/api/history',
                    method: 'GET',
                    success: function(data) {
                        const historyContainer = $('#history-container');
                        historyContainer.empty();
    
                        if (data.length === 0) {
                            historyContainer.append('<p>No history available.</p>');
                        } else {
                            data.forEach(function(item) {
                                const form = `
                                    <form class="history-form" action="/history" method="post">
                                        <input type="hidden" name="id" value="${item._id}">
                                        <button class="font-bold" type="submit">
                                            Hasil: ${item.hasil.class} <br>
                                            Waktu: ${new Date(item.waktu).toLocaleString()}
                                        </button>
                                    </form>
                                `;
                                historyContainer.append(form);
                            });
                        }
                    },
                    error: function(err) {
                        console.error('Error fetching history:', err);
                    }
                });
            });
        });
    </script>
    <link rel="stylesheet" type="text/css" href="/styles.css">
</head>
<body class="w-full">
    <header class="px-0 lg:px-28 py-1 lg:h-32 lg:py-10">
        <button class="flex pl-4 lg:hidden" id="toggleSidebar"><img class="h-14" src="/uploads/img/menu.png" alt=""></button>
        <a href="/">
            <img class="w-28 h-14 lg:w-72 lg:h-32" src="/uploads/img/Logo.png" alt="logo">
        </a>
        <nav class="flex gap-4 lg:gap-20 navigation pr-4">
            <!-- <form action="/search" class="flex" method="post">
                <input class="w-32 h-7 rounded-2xl text-sm lg:w-96 lg:h-14 lg:text-xl  lg:rounded-2xl" type="text" name="keyword" placeholder="Masukkan kata kunci pencarian">
                <button class="text-[#28667E] bg-white w-20 h-10 font-bold rounded-2xl" type="submit" hidden>Cari</button>
            </form> -->
            <a href="/akun">
                <img class="flex w-10 h-10 lg:w-20 lg:h-20 rounded-full" src="/uploads/img/<%= gambar %>" alt="">
            </a>
        </nav>
    </header>
    <div class="mt-20 lg:mt-10 lg:flex lg:flex-col lg:h-screen lg:justify-center lg:items-center">
        <!-- <div class="flex-none h-[31rem] lg:h-40"></div> -->
        
        <div class="lg:flex flex-1 w-full">
            <div class="sidebar py-3 px-2 lg:py-6 lg:px-4 h-[36rem] lg:h-[65rem] fixed left-5 top-[4.5rem] lg:mt-10 flex-none w-44 lg:w-[25rem] hidden lg:static lg:ml-10 lg:flex">
                <!-- <h1 class="mt-32">HI</h1> -->
                <div class="flex-col gap-20 h-4/5 lg:h-full w-full overflow-y-scroll scrollbar-custom">
                    <!-- <button onclick="window.location.reload();">Refresh</button> -->
                    
                    <div id="history-container">
                        <% if (history.length === 0) { %>
                            <p>No history available.</p>
                        <% } else { %>
                            <% history.forEach((item) => { %>
                                <form class="history-form" action="/history" method="post">
                                    <input type="hidden" name="id" value="<%= item._id %>">
                                    <button class="w-full" type="submit">
                                        <div class="flex flex-col text-left w-full lg:pl-8 text-white justify-start items-start text-sm lg:text-2xl font-medium mb-5">
                                            <p class="text-left">
                                                Hasil: <%= item.hasil.class %>
                                            </p>
                                            <p>
                                                <%= new Date(item.waktu).toLocaleString() %>
                                            </p>
                                        </div>
                                    </button>
                                </form>
                            <% }); %>
                        <% } %>
                    </div>                  
                </div>
                <button class="mt-5 sidebar1 text-sm lg:text-2xl font-normal w-full lg:w-full h-8 lg:h-20" id="lakukanDiagnosa" name="lakukanDiagnosa">Tambah Gambar</button><br>
                <div class="flex justify-center items-center lg:w-full">
                    <a class="sidebar1 flex items-center text-sm lg:text-2xl font-normal w-full h-8 lg:h-16" href="/">Artikel</a>
                </div>
            </div>
            <div class="containe">
                <form id="uploadForm" action="/image/clasify" method="POST" enctype="multipart/form-data">
                    <a hidden id="closeForm" href="#">x</a>
                    <label for="fileInput" id="dropArea">
                        <input type="file" name="imageFile" id="fileInput" accept="image/*" style="display: none;" required>
                        <div class="flex flex-col justify-center items-center lg:text-3xl" id="img-view">
                            <img class="lg:h-60 lg:w-60" id="preview" src="/uploads/img/camera_enhance.png" alt=""><br>
                            <p>Tambahkan gambar yang ingin diolah</p>
                            <span>Tambah gambar dengan format .jpg .jpng .png <br> Pastikan gambar yang ditambahkan gambar daun jeruk <br> disarankan background berwarna putih untuk meningkatkan akurasi</span>
                        </div>
                    </label>
                    <button class="lg:text-4xl font-semibold lg:font-bold p-3 lg:p-5" type="submit" id="submitButton">Tambah Gambar</button>
                    <p id="errorMessage" style="color: red; display: none;">Silakan tambahkan gambar sebelum mengirimkan.</p>
                </form>
            </div>
            <div class="mt-0 lg:mt-5 overflow-y-scroll scrollbar-custom" id="output"></div>
        </div>
    </div>

</body>
<script>
    document.getElementById('toggleSidebar').addEventListener('click', function() {
    const sidebar = document.querySelector('.sidebar');
    sidebar.classList.toggle('hidden');
});
</script>
<script>
    $(document).ready(function() {
        $('#refresh-btn').on('click', function() {
            $.ajax({
                url: '/api/history',
                method: 'GET',
                success: function(data) {
                    const historyContainer = $('#history-container');
                    historyContainer.empty();

                    if (data.length === 0) {
                        historyContainer.append('<p>No history available.</p>');
                    } else {
                        data.forEach(function(item) {
                            const form = `
                                <form class="history-form" action="/history" method="post">
                                    <input type="hidden" name="id" value="${item._id}">
                                    <button class="font-bold" type="submit">
                                        Hasil: ${item.hasil.class} <br>
                                        Waktu: ${new Date(item.waktu).toLocaleString()}
                                    </button>
                                </form>
                            `;
                            historyContainer.append(form);
                        });
                    }
                },
                error: function(err) {
                    console.error('Error fetching history:', err);
                }
            });
        });
    });
</script>
<script>
    
    document.addEventListener('DOMContentLoaded', () => {
        const formContainer = document.querySelector(".containe");
        document.querySelectorAll('.history-form').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault(); // Prevent the default form submission

                const formData = new FormData(form);
                const id = formData.get('id');

                try {
                    const response = await fetch('/history', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id }),
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }

                    const data = await response.text(); // Get the response text
                    const outputElement = document.getElementById("output");
                    outputElement.innerHTML = data; // Update the div with the response
                    outputElement.style.display = "flex";
                    outputElement.style.flexDirection = "column";
                    formContainer.style.display = "none"
                } catch (error) {
                    console.error('There was a problem with the fetch operation:', error);
                }
            });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const lakukanDiagnosaButton = document.getElementById("lakukanDiagnosa");
        const formContainer = document.querySelector(".containe");
        const outputDiv = document.getElementById("output");
        const dropArea = document.getElementById('dropArea');
        const imgView = document.getElementById("img-view");

        lakukanDiagnosaButton.addEventListener("click", function() {
            formContainer.style.display = "flex"; // Tampilkan form saat tombol ditekan
            outputDiv.style.display = "none"; // Sembunyikan div output saat form muncul
        });

        const closeButton = document.getElementById("closeForm");
        closeButton.addEventListener("click", function() {
            formContainer.style.display = "none"; // Sembunyikan form saat tombol "Close" ditekan
            outputDiv.style.display = "flex"; // Tampilkan kembali div output saat form disembunyikan
        });

        const form = document.getElementById("uploadForm");
        const history = document.getElementById("history");
        const fileInput = document.getElementById("fileInput");
        
        async function submitForm(event) {
            event.preventDefault(); // Mencegah pengiriman formulir secara default

            const formData = new FormData(this);
            const response = await fetch(this.action, {
                method: this.method,
                body: formData
            });

            const resultHTML = await response.text();

            const outputElement = document.getElementById("output");
            outputElement.innerHTML = resultHTML;

            // Opsional sembunyikan form atau tampilkan hanya output
            formContainer.style.display = "none"; // Sembunyikan form setelah pengiriman
            outputElement.style.display = "flex";
            outputElement.style.flexDirection = "column"; // Tampilkan elemen output
        }

        function uploadImage(event) {
            var file = event.target.files[0];
            var reader = new FileReader();
            reader.onload = function(event) {
                document.getElementById('preview').src = event.target.result;
            }
            reader.readAsDataURL(file);
        }
        document.getElementById('fileInput').addEventListener('change', function(event) {
            var file = event.target.files[0];
            var reader = new FileReader();
            reader.onload = function(event) {
                document.getElementById('preview').src = event.target.result;
            }
            reader.readAsDataURL(file);
        });
        form.addEventListener("submit", submitForm);

        // Mengatur event listener untuk mencegah peristiwa default saat file ditarik dan dilepas
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        dropArea.addEventListener('dragover', function(e) {
            this.classList.add('highlight');
        });

        dropArea.addEventListener('dragleave', function() {
            this.classList.remove('highlight');
        });

        dropArea.addEventListener('drop', function(e) {
            this.classList.remove('highlight');
            fileInput.files = e.dataTransfer.files;
            previewFile(fileInput.files[0]);
        });

        function previewFile(file) {
            var reader = new FileReader();
            reader.onloadend = function() {
                document.getElementById('preview').src = reader.result;
            }
            if (file) {
                reader.readAsDataURL(file);
            } else {
                document.getElementById('preview').src = "/uploads/img/camera_enhance.png";
            }
        }

        fileInput.addEventListener('change', function() {
            previewFile(fileInput.files[0]);
        });
        
    });

</script>
<script>
    function fetchHistory() {
        fetch('/history')
            .then(response => response.text()) // Mengambil teks dari respon
            .then(html => {
                const outputDiv = document.getElementById('output');
                outputDiv.innerHTML = html; // Memasukkan HTML ke dalam output
            })
            .catch(error => {
                console.error('Error fetching history:', error);
            });
    }

    window.onload = fetchHistory;
</script>
    
</html>
